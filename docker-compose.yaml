# Copyright (c) Facebook, Inc. and its affiliates.

# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

version: "3"

volumes:
  whatsappMedia:
    driver: local
  mysqlData:
    driver: local

networks:
  db:
    driver: bridge
  core:
    driver: bridge
  queue:
    driver: bridge

services:
  db:
    platform: linux/x86_64
    image: mysql:8.0.33
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - .env
    ports:
      - "33060:3306"
    volumes:
      - mysqlData:/var/lib/mysql
    networks:
      - db
    cap_drop:
      - MKNOD
  wacore:
    platform: linux/x86_64
    image: docker.whatsapp.biz/coreapp:${WHATSAPP_IMAGE_VERSION}
    command:
      [
        "/opt/whatsapp/bin/wait_on_mysql.sh",
        "/opt/whatsapp/bin/launch_within_docker.sh",
      ]
    volumes:
      - whatsappMedia:/usr/local/wamedia
    env_file:
      - .env
    environment:
      # This is the version of the docker templates being used to run WhatsApp Business API
      WA_RUNNING_ENV_VERSION: v2.2.3
      ORCHESTRATION: DOCKER-COMPOSE
    depends_on:
      - "db"
    networks:
      - db
      - core
    cap_drop:
      - MKNOD
  waweb:
    platform: linux/x86_64
    image: docker.whatsapp.biz/web:${WHATSAPP_IMAGE_VERSION}
    command:
      [
        "/opt/whatsapp/bin/wait_on_mysql.sh",
        "/opt/whatsapp/bin/launch_within_docker.sh",
      ]
    ports:
      - "9090:443"
    volumes:
      - whatsappMedia:/usr/local/wamedia
    env_file:
      - .env
    environment:
      WACORE_HOSTNAME: wacore
      # This is the version of the docker templates being used to run WhatsApp Business API
      WA_RUNNING_ENV_VERSION: v2.2.3
      ORCHESTRATION: DOCKER-COMPOSE
    depends_on:
      - "db"
      - "wacore"
    networks:
      - db
      - core
    cap_drop:
      - MKNOD
  redis:
    image: "redis:${REDIS_IMAGE_VERSION}"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    environment:
      - REDIS_HOST=${REDIS_HOST}
    networks:
      - queue
  web_server:
    build:
      context: ./web-server
    depends_on:
      - app
    container_name: web_server
    tty: true
    ports:
      - "8080:80"
    networks:
      - server
  app:
    build:
      context: ./src
    container_name: app
    volumes:
      - ./src:/usr/src/app
    depends_on:
      - mysql
    restart: always
    tty: true
    ports:
      - "{CHATBOT_PORT}:${CHATBOT_PORT}"
    networks:
      - db
      - queue
      - core
    env_file:
      - .env
